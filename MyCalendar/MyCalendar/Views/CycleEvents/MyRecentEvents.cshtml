@model MyCalendar.ViewModels.CycleEventsViewModel
@{
    ViewBag.Title = "My Recent Events";
}

<h2 class="voffset2">My recent events</h2>
<ul class="events">
    @foreach (var cycleEvent in Model.RecentCycleEvents)
    {
        if (cycleEvent.TypeId == 1 && !cycleEvent.StartDate.Equals(DateTime.MinValue))
        {
            <li class="dates">
                <div class="startDate">
                    <span>Start date</span>
                    <div class="startDateCard"></div>
                    <div class="day">
                        @cycleEvent.StartDate.ToString("d ")
                    </div>
                    <div class="monthYear">
                        @cycleEvent.StartDate.ToString("MMM") @cycleEvent.StartDate.ToString("yy")
                    </div>
                </div>
                <div class="interval">
                    <div class="bar"></div>
                </div>
                <div class="endDate">
                    <span>End date</span>
                    <div class="endDateCard"></div>
                    <div class="day">
                        @cycleEvent.EndDate.ToString("d ")
                    </div>
                    <div class="monthYear">
                        @cycleEvent.EndDate.ToString("MMM") @cycleEvent.EndDate.ToString("yy")
                    </div>
                </div>
                <div class="actions">
                    <div class="action">
                        <a href="@Url.Action("Edit", "CycleEvents", new {id = cycleEvent.Id})">
                            Edit
                        </a> <span>|</span>
                        <a href="#" class="js-remove-event" data-event-id="@cycleEvent.Id">
                            Remove
                        </a>
                    </div>
                </div>
                @if (!cycleEvent.StartDateOfPreviousEvent.Equals(DateTime.MinValue))
                {
                <div class="previous-cycle voffset">
                    Previous menstrual cycle length: <strong>@cycleEvent.CycleLength</strong> days
                </div>
                }
            </li>
        }
        else
        {
            <li class="dates smallDates">
                <div class="ovulationDate">
                    <span>Ovulation</span>
                    <div class="ovulationDateCard"></div>
                    <div class="day">
                        @cycleEvent.OvulationDate.ToString("d ")
                    </div>
                    <div class="monthYear">
                        @cycleEvent.OvulationDate.ToString("MMM") @cycleEvent.OvulationDate.ToString("yy")
                    </div>
                </div>
                <div class="ovulationInterval">
                    <div id="timeTitle">
                        Approximate time:
                    </div>
                    <div id="time">
                        @cycleEvent.OvulationDate.ToString("HH:mm")
                    </div>
                </div>
                <div class="actions">
                    <div class="action">
                        <a href="@Url.Action("Edit", "CycleEvents", new {id = cycleEvent.Id})">
                            Edit
                        </a><span>|</span>
                        <a href="#" class="js-remove-event" data-event-id="@cycleEvent.Id">
                            Remove
                        </a>
                    </div>
                </div>
            </li>
        }
    }
</ul>
@section scripts
{
    <script>
        $(document).ready(function() {
            $(".js-remove-event").click(function(e) {
                var link = $(e.target);

                bootbox.confirm({
                    message: "Are you sure you want to remove this event?",
                    buttons: {
                        confirm: {
                            label: 'Yes',
                            className: 'btn-danger'
                        },
                        cancel: {
                            label: 'No',
                            className: 'btn-default'
                        }
                    },
                    callback: function(result) {
                        if (result) {
                            $.ajax({
                                    url: "/api/cycleEvents/" + link.attr("data-event-id"),
                                    method: "DELETE"
                                })
                                .done(function() {
                                    link.parents("li").fadeOut(function() {
                                        $(this).remove();
                                    });
                                })
                                .fail(function() {
                                    alert("Something failed!");
                                });
                        }
                    }
                });
            });
        });
    </script>

}

