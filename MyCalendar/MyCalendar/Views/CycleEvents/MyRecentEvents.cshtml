@model MyCalendar.ViewModels.CycleEventsViewModel
@{
    ViewBag.Title = "My Recent Events";
}

<h2 class="voffset2">My recent events</h2>
<ul id="cycleEvents" class="events">
    @foreach (var cycleEvent in Model.RecentCycleEvents)
    {
        if (cycleEvent.TypeId == 1 && !cycleEvent.StartDate.Equals(DateTime.MinValue))
        {
            <li class="dates">
                <div class="start-date">
                    <span>Start date</span>
                    <div class="start-date-card"></div>
                    <div class="day">
                        @cycleEvent.StartDate.ToString("d ")
                    </div>
                    <div class="month-year">
                        @cycleEvent.StartDate.ToString("MMM") @cycleEvent.StartDate.ToString("yy")
                    </div>
                </div>
                <div class="interval">
                    <div class="bar"></div>
                </div>
                <div class="end-date">
                    <span>End date</span>
                    <div class="end-date-card"></div>
                    <div class="day">
                        @cycleEvent.EndDate.ToString("d ")
                    </div>
                    <div class="month-year">
                        @cycleEvent.EndDate.ToString("MMM") @cycleEvent.EndDate.ToString("yy")
                    </div>
                </div>
                <div class="actions">
                    <div class="action">
                        <a href="@Url.Action("Edit", "CycleEvents", new {id = cycleEvent.Id})">
                            Edit
                        </a> <span>|</span>
                        <a href="#" class="js-remove-event" data-event-id="@cycleEvent.Id">
                            Remove
                        </a>
                    </div>
                </div>
                @if (!cycleEvent.StartDateOfPreviousEvent.Equals(DateTime.MinValue))
                {
                <div class="previous-cycle voffset">
                    Previous menstrual cycle length: <strong>@cycleEvent.CycleLength</strong> days
                </div>
                }
            </li>
        }
        else
        {
            <li class="dates s-dates">
                <div class="ovulation-date">
                    <span>Ovulation</span>
                    <div class="ovulation-date-card"></div>
                    <div class="day">
                        @cycleEvent.OvulationDate.ToString("d ")
                    </div>
                    <div class="month-year">
                        @cycleEvent.OvulationDate.ToString("MMM") @cycleEvent.OvulationDate.ToString("yy")
                    </div>
                </div>
                <div class="ovulation-interval">
                    <div id="timeTitle">
                        Approximate time:
                    </div>
                    <div id="time">
                        @cycleEvent.OvulationDate.ToString("HH:mm")
                    </div>
                </div>
                <div class="actions">
                    <div class="action">
                        <a href="@Url.Action("Edit", "CycleEvents", new {id = cycleEvent.Id})">
                            Edit
                        </a><span>|</span>
                        <a href="#" class="js-remove-event" data-event-id="@cycleEvent.Id">
                            Remove
                        </a>
                    </div>
                </div>
            </li>
        }
    }
</ul>
@section scripts
{
    <script>
        $(document).ready(function() {
            CycleEventsController.init("#cycleEvents");
        });
    </script>

}

